  # TODO: Prefix all env vars with service name
  # TODO: Allow specifing the image tag to use
  version: "3"

  services:
    dtl:
      depends_on:
        - l2geth
      image: ethereumoptimism/data-transport-layer
      build:
        context: ..
        dockerfile: ./ops/docker/Dockerfile.data-transport-layer
      # override with the dtl script and the env vars required for it
      entrypoint: ./dtl.sh
      env_file:
        -  ./envs/dtl.env
      # set the rest of the env vars for the network whcih do not
      # depend on the docker-compose setup
      environment:
          # used for setting the address manager address
          URL: ${TEST_NET_ADRESSES_URL}
          # connect to the 2 layers
          DATA_TRANSPORT_LAYER__L1_RPC_ENDPOINT: ${TEST_NET_INFURA}
          DATA_TRANSPORT_LAYER__L2_RPC_ENDPOINT: http://l2geth:8545
          DATA_TRANSPORT_LAYER__L2_CHAIN_ID: 50021
          DATA_TRANSPORT_LAYER__L1_START_HEIGHT: ${TEST_NET_BLOCK_START}
          DATA_TRANSPORT_LAYER__LEGACY_SEQUENCER_COMPATIBILITY: 'true'
          DATA_TRANSPORT_LAYER__LOGS_PER_POLLING_INTERVAL: 500
          DATA_TRANSPORT_LAYER__POLLING_INTERVAL: 1000
          DATA_TRANSPORT_LAYER__DANGEROUSLY_CATCH_ALL_ERRORS: 'true'
      ports:
        - ${DTL_PORT:-7878}:7878
      volumes:
        - "./data/dtl:/data/db/"
      logging:
          driver: "json-file"
          options:
              max-size: "1g"
              max-file: "3"

    l2geth:
      image: ethereumoptimism/l2geth
      build:
        context: ..
        dockerfile: ./ops/docker/Dockerfile.geth
      # override with the geth script and the env vars required for it
      entrypoint: sh ./geth.sh
      env_file:
        - ./envs/geth.env
      environment:
          CHAIN_ID: 50021
          NETWORK_ID: 50021
          ETH1_HTTP: ${TEST_NET_INFURA}
          ROLLUP_STATE_DUMP_PATH: ${TEST_NET_ROLLUP_STATE_DUMP_PATH}
          # used for getting the addresses
          URL: ${TEST_NET_ADRESSES_URL}
          # connecting to the DTL
          ROLLUP_CLIENT_HTTP: http://dtl:7878

          ETH1_CTC_DEPLOYMENT_HEIGHT: ${TEST_NET_BLOCK_START}
          ETH1_L1_CROSS_DOMAIN_MESSENGER_ADDRESS: ${TEST_NET_ETH1_L1_CROSS_DOMAIN_MESSENGER_ADDRESS}
          ETH1_L1_STANDARD_BRIDGE_ADDRESS: ${TEST_NET_ETH1_L1_STANDARD_BRIDGE_ADDRESS}
          RETRIES: 60
          ROLLUP_POLL_INTERVAL_FLAG: 30000ms
          MVM_GAS_ORACLE_PRICE: 1000
          MVM_GAS_ORACLE_ADDRESS: ${TEST_NET_MVM_GAS_ORACLE_ADDRESS}
          BLOCK_SIGNER_ADDRESS: ${TEST_NET_LOCK_SIGNER_ADDRESS}
          BLOCK_SIGNER_KEY: ${TEST_NET_BLOCK_SIGNER_KEY}
      logging:
          driver: "json-file"
          options:
              max-size: "1g"
              max-file: "3"
      volumes:
        - "./data/geth:/root/.ethereum"

      ports:
        - ${L2GETH_HTTP_PORT:-8545}:8545
        - ${L2GETH_WS_PORT:-8546}:8546
        - ${L2GETH_NODE_PORT:-30303}:30303

    verifier:
      depends_on:
        - dtl
        - l2geth
      build:
        context: ..
        dockerfile: ./ops/docker/Dockerfile.geth
      image: ethereumoptimism/l2geth
      entrypoint: sh ./geth.sh
      env_file:
        - ./envs/geth.env
      environment:
        BLOCK_SIGNER_KEY: ${TEST_NET_BLOCK_SIGNER_KEY}
        BLOCK_SIGNER_ADDRESS: ${TEST_NET_LOCK_SIGNER_ADDRESS}
        URL: ${TEST_NET_ADRESSES_URL}
        ETH1_HTTP: ${TEST_NET_INFURA}
        SEQUENCER_CLIENT_HTTP: http://l2geth:8545
        ROLLUP_STATE_DUMP_PATH: ${TEST_NET_ROLLUP_STATE_DUMP_PATH}
        ROLLUP_CLIENT_HTTP: http://dtl:7878
        ROLLUP_BACKEND: 'l1'
        ETH1_CTC_DEPLOYMENT_HEIGHT: ${TEST_NET_BLOCK_START}
        RETRIES: 60
        ROLLUP_VERIFIER_ENABLE: 'true'
      ports:
        - ${VERIFIER_HTTP_PORT:-8547}:8545
        - ${VERIFIER_WS_PORT:-8548}:8546
      logging:
          driver: "json-file"
          options:
              max-size: "1g"
              max-file: "3"

    batch_submitter:
      depends_on:
        - l2geth
      image: ethereumoptimism/batch-submitter
      build:
        context: ..
        dockerfile: ./ops/docker/Dockerfile.batch-submitter
      entrypoint: ./batches.sh
      env_file:
        - ./envs/batches.env
      logging:
          driver: "json-file"
          options:
              max-size: "1g"
              max-file: "3"
      environment:
          L1_NODE_WEB3_URL: ${TEST_NET_INFURA}
          L2_NODE_WEB3_URL: http://l2geth:8545
          URL: ${TEST_NET_ADRESSES_URL}
          SEQUENCER_PRIVATE_KEY: ${TEST_NET_SEQUENCER_PRIVATE_KEY}
          PROPOSER_PRIVATE_KEY: ${TEST_NET_PROPOSER_PRIVATE_KEY}
          SEQUENCER_BATCH_TYPE: ${BATCH_SUBMITTER_SEQUENCER_BATCH_TYPE:-zlib}
          MAX_BATCH_SUBMISSION_TIME: 3600

    gas_oracle:
      depends_on:
        - l2geth
      image: ethereumoptimism/gas-oracle
      build:
          context: ..
          dockerfile: ./ops/docker/Dockerfile.gas-oracle
      entrypoint: ./gas-oracle.sh
      environment:
          GAS_PRICE_ORACLE_ETHEREUM_HTTP_URL: ${TEST_NET_INFURA}
          GAS_PRICE_ORACLE_PRIVATE_KEY: ${TEST_NET_SEQUENCER_PRIVATE_KEY}
          GAS_PRICE_ORACLE_LAYER_TWO_HTTP_URL: http://l2geth:8545
      restart: unless-stopped
